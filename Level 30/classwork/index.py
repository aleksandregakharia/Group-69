# 1) შექმენით ფუნქცია, რომელსაც არგუმენტად გადაეცემა რიცხვი, ხოლო ამ ფუნქციამ უნდა დაბეჭდოს 1-დან გადმოცემულ რიცხვამდე ყველა რიცხვი

def ricxvi(r) :
    for i in range(1, 1+ r) :
        print(i)

# 2) შექმენით ფუნქცია, რომელსაც არგუმენტად გადაეცემა სახელი და დაბეჭდავს მისთვის მიესალმებას (მაგალითად: "Hello ixvis tolma"). გამოძახეთ ეს ფუნქცია 2-ჯერ და გადაეცით სხვადასხვა სახელი

def greet(saxeli) :
    print("hello" , saxeli , "ixvis" , "tolmav")
greet("nuca")
greet("alexs")


# 3) შექმენით ფუნქცია, რომელსაც არგუმენტად გადაეცემა 2 რიცხვი. ფუნქციამ უნდა დაბეჭდოს ამ რიცხვების ნამრავლი. საბოლოოდ გამოიძახეთ ის

def gamravleba(a , b):
    return a*b


# 4) შექმენით ფუნქცია, რომელსაც არგუმენტად გადაეცემა სია. ფუნქციამ უნდა დაბეჭდოს ეს სია შებრუნებულად(არ გამოიყენოთ slicing-ი)
def ukugma(kg):
    ukugma = []
    for i in range(1, len(kg), -1):
        ukugma.append(kg[i])
    print(ukugma)


# 5) შექმენით ფუნქცია, რომელსაც გადასცემთ რიცხვების სიას. გადაუარეთ გადმოცემულ სიას for ციკლით და დააბრუნეთ ახალი სია, სადაც ჩამატებული იქნება გადმოცემული სიიდან მხოლოდ ის რიცხვები, რომლებიც მეტია 10-ზე. საბოლოოდ დააბრუნეთ ეს სია
def func(numbers):
    lis = []
    for ricxvi in numbers:
        if ricxvi > 10:
            lis.append(ricxvi)
    return lis


# 6) შექმენით ფუნქცია, რომელსაც გადაეცემა სიმბოლოების სია. ფუნქციამ უნდა დააბრუნოს ეს სია პირველი და ბოლო ელემენტების გარეშე, გამოიყენეთ slicing-ი

def pir_bolo_garesh(gareshe):
    return gareshe[1:-1]


# 7) შექმენით ფუნქცია, რომელსაც გადაეცემა ორი რიცხვების სია, გადაურეთ ორივეს for ციკლით და გაიგეთ თითოეულ სიაში რიცხვების ჯამი(შეინახეთ ცალკე ცვლადებში), გაამრავლეთ ორივე ერთმანეთზე და დააბრუნეთ
def siebis_gamravleba(list1, list2):
    N1 = 0
    N2 = 0

    for i in N1:
        N1 += i

    for i in N2:
        N2 += i

    return N1 * N2


# 😎 შექმენით ფუნქცია, რომელსაც გადაეცემა რიცხვების სია. გადაუარეთ ამ სიას while ციკლით და ჩაამატეთ გაორმაგებული რიცხვები ახალ სიაში. საბოლოოდ დააბრუნეთ ეს სია
def gaor_sia(ricxv):
    A = 0
    jirmag = []
    while A < len(ricxv):
        jirmag.append(ricxv[A] * 2)
        A += 1
    return jirmag


# 9) შექმენით ფუნქცია, რომელსაც გადაეცემა რიცხვების სია. გადაუარეთ ამ სიას for ციკლით და ჩაამატეთ მხოლოდ ლუწი რიცხვები ახალ სიაში. საბოლოოდ დააბრუნეთ ეს სია

def luwebi(num):
    Shd = []
    for i in num:
        if i % 2 == 0:
            Shd.append(i)
    return Shd


# 10) შექმენით ფუნქცია, რომელსაც გადაეცემა სახელების სია. შექმენით ახალის სია, სადაც ჩაამატებთ გადმოცემული სიიდან მხოლოდ იმ სახელებს, რომლებიც იწყება "N"-ზე`. საბოლოოდ დააბრუნეთ ეს სია
def sa_N(sax):
    result = []
    for i in sax:
        if i.startswith("N"):
            result.append(i)
    return result

# 11) შექმენით ფუნქცია, რომელსაც არგუმენტად გადაეცემა ორი რიცხვი, ხოლო ამ ფუნქციამ უნდა დააბრუნოს პირველი რიცხვი აყვანილი მე-2 რიცხვის ხარისხში
# ანდრია
# მგონი ესენიც გეყოფა? 
# ანდრია

def gamotvla(a, b):
    return a ** b


# 12) შექმენით ფუნქცია, რომელიც მიიღებს წინადადებას და დაბეჭდავს მის თითოეულ სიტყვაში სიმბოლოების რაოდენობას(ცალ-ცალკე)

def sityvebis_sigr(raod):
   sityvebi = raod.split()
   for sityvebi in sityvebi:
        print(len(sityvebi))