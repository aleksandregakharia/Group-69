# 1)დაწერე ფუნქცია, რომელიც იღებს ლისტს და ყველა 0-ი გადააქვს ბოლოში, ისე რომ სხვა ელემენტების თანმიმდევრობა არ ირღვევა.


def move_zeros_to_end(lst):
    result = []
    zero_count = 0

    for x in lst:
        if x == 0:
            zero_count += 1
        else:
            result.append(x)

    result += [0] * zero_count
    return result


# 2)შენ გევალება შექმნა ფუნქცია, რომელიც მიიღებს სტრინგს და დააბრუნებს ამ სტრინგის დამასკულ (დამალულ) ვერსიას. კონკრეტულად კი, ფუნქციამ უნდა შეცვალოს სტრინგის ყველა სიმბოლო, გარდა ბოლო ოთხი სიმბოლოსი, სიმბოლოთი #.


def daf(s) :
    
    res = "" 
    for i in s[:-4] :
        res += "#"
    return res + s[-4 :]


# დაწერო ფუნქცია accum, რომელიც მიიღებს სტრინგს (მხოლოდ ლათინური ასოებით a-დან z-მდე, uppercase და lowercase) და დააბრუნებს სპეციალურად გარდაქმნილ სტრინგს შემდეგი წესით:

# თითოეული სიმბოლო უნდა გამრავლდეს თავისი ინდექსის მიხედვით (0-დან დაწყებული),

# პირველი ასო უნდა იყოს uppercase, დანარჩენები lowercase,

# მიღებული ნაწყვეტები უნდა გამოყოფილი იყოს - სიმბოლოთი.


def accum(nums) :
    res = []

    for i, char in enumerate(nums):
        part = char.upper() + char.lower() * i
        res.append(part)
    return '-'.join(res)



    